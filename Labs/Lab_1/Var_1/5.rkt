(define (and-fold . args)
  (define (helper args)
    (cond ((null? args) #t)
          ((= (length args) 1) (car args))
          ((equal? (car args) #f) #f)
          (else (helper (cdr args)))))
  (helper args))

(define (or-fold . args)
  (define (helper args)
    (cond ((null? args) #f)
          ((= (length args) 1) (car args))
          ((equal? (car args) #f) (helper (cdr args)))
          (else (car args))))
  (helper args))